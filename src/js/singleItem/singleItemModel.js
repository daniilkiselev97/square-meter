export default class SingleItem{
    constructor(id){
        this.id = id
    }
    async getItem(){
        try{
            const queryString = `https://jsproject.webcademy.ru/items/${this.id}`;     //–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞–∂–¥–æ–º—É –æ–±—ä–µ–∫—Ç—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞
            const response = await fetch(queryString);
            const data = await response.json()
            this.result = await data
        }catch(error){
            alert(error)
        }
       

    }
    //–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –¥—Ä—É–≥–æ–π fetch!
    async submitForm(formData){
        const queryString = `https://jsproject.webcademy.ru/bidnew`;
        const response = await fetch(queryString, {    //–í–æ–∑–≤—Ä–∞—â–∞–µ–º promise —Å –æ—Ç–≤–µ—Ç–æ–º —Å —Å–µ—Ä–≤–µ—Ä–∞
            method: 'POST',
            headers: {
                'Content-type': 'application/json; charset=UTF-8',
            },
            body:  JSON.stringify(formData)
        })
        const data = await response.json()
        this.response = await data  //–°–æ–∑–¥–∞–µ–º –≤ –æ–±—ä–µ–∫—Ç–µ –ø–æ–ª–µ response —Å –æ—Ç–≤–µ—Ç–æ–º –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞(—Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –ª–∏ –∑–∞—è–≤–∫–∏ –∏–ª–∏ –Ω–µ—Ç)
        // console.log("üöÄ ~ file: singleItemModel.js:29 ~ SingleItem ~ submitForm ~ this.response", this.response)
        // console.log(this.response.message)
        

    }


}